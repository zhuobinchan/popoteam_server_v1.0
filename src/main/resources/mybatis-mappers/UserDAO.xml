<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.geetion.puputuan.dao.UserDAO">
    <resultMap id="BaseResultMap" type="com.geetion.puputuan.model.User">
        <id column="pu_user_id" property="id" jdbcType="BIGINT"/>
        <result column="pu_user_user_id" property="userId" jdbcType="BIGINT"/>
        <result column="pu_user_phone" property="phone" jdbcType="VARCHAR"/>
        <result column="pu_user_wechat_id" property="wechatId" jdbcType="VARCHAR"/>
        <result column="pu_user_nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="pu_user_nick_name_chr" property="nickNameChr" jdbcType="VARCHAR"/>
        <result column="pu_user_identify" property="identify" jdbcType="VARCHAR"/>
        <result column="pu_user_sex" property="sex" jdbcType="VARCHAR"/>
        <result column="pu_user_sign" property="sign" jdbcType="LONGVARCHAR"/>
        <result column="pu_user_birthday" property="birthday" jdbcType="TIMESTAMP"/>
        <result column="pu_user_head_id" property="headId" jdbcType="BIGINT"/>
        <result column="pu_user_constellation" property="constellation" jdbcType="VARCHAR"/>
        <result column="pu_user_province_id" property="provinceId" jdbcType="INTEGER"/>
        <result column="pu_user_province" property="province" jdbcType="VARCHAR"/>
        <result column="pu_user_city_id" property="cityId" jdbcType="INTEGER"/>
        <result column="pu_user_city" property="city" jdbcType="VARCHAR"/>
        <result column="pu_user_area_id" property="areaId" jdbcType="INTEGER"/>
        <result column="pu_user_area" property="area" jdbcType="VARCHAR"/>
        <result column="pu_user_type" property="type" jdbcType="INTEGER"/>
        <result column="pu_user_device" property="device" jdbcType="INTEGER"/>
        <result column="pu_user_create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="pu_user_friend_update_time" property="friendUpdateTime" jdbcType="TIMESTAMP"/>

        <association property="userBase" column="pu_user_id"
                     javaType="com.geetion.generic.userbase.pojo.UserBase"
                     resultMap="com.geetion.generic.userbase.dao.UserBaseDAO.BaseResultMap"/>
        <!--association property="province" column="pu_user_province_id"
                     javaType="com.geetion.generic.districtmodule.pojo.District"
                     resultMap="com.geetion.generic.districtmodule.dao.ProvinceDAO.BaseResultMap"/>
        <association property="city" column="pu_user_city_id"
                     javaType="com.geetion.generic.districtmodule.pojo.District"
                     resultMap="com.geetion.generic.districtmodule.dao.CityDAO.BaseResultMap"/>
        <association property="area" column="pu_user_area_id"
                     javaType="com.geetion.generic.districtmodule.pojo.District"
                     resultMap="com.geetion.generic.districtmodule.dao.AreaDAO.BaseResultMap"/-->
        <collection property="jobList" resultMap="com.geetion.puputuan.dao.JobDAO.BaseResultMap"
                    ofType="com.geetion.puputuan.model.Job"
                    javaType="java.util.List"/>
        <collection property="interestList" resultMap="com.geetion.puputuan.dao.InterestDAO.BaseResultMap"
                    ofType="com.geetion.puputuan.model.Interest"
                    javaType="java.util.List"/>
        <collection property="fancyList" resultMap="com.geetion.puputuan.dao.FancyDAO.BaseResultMap"
                    ofType="com.geetion.puputuan.model.Fancy"
                    javaType="java.util.List"/>
        <collection property="album" resultMap="com.geetion.puputuan.dao.PhotoDAO.BaseResultMap"
                    ofType="com.geetion.puputuan.model.Photo"
                    javaType="java.util.List"/>

    </resultMap>

    <!-- 带有某些计算的字段 -->
    <resultMap id="BaseResultMapWithCount" type="com.geetion.puputuan.pojo.UserWithCount" extends="BaseResultMap">

        <!-- 邀请次数 -->
        <result column="pu_user_invited_times" property="invitedTimes" jdbcType="INTEGER"/>
        <!-- 7天内邀请次数 -->
        <result column="pu_user_invited_times_in_week" property="invitedTimesInWeek" jdbcType="INTEGER"/>
        <!-- 最近发起邀请时间 -->
        <result column="pu_user_invited_lately_date" property="invitedLatelyDate" jdbcType="TIMESTAMP"/>
        <!-- 被邀请次数 -->
        <result column="pu_user_be_invited_times" property="beInvitedTimes" jdbcType="INTEGER"/>
        <!-- 7天内被邀请次数 -->
        <result column="pu_user_be_invited_times_in_week" property="beInvitedTimesInWeek" jdbcType="INTEGER"/>
        <!-- 最近被邀请时间 -->
        <result column="pu_user_be_invited_lately_date" property="beInvitedLatelyDate" jdbcType="TIMESTAMP"/>
        <!-- 好友数 -->
        <result column="pu_user_friends_number" property="friendsNumber" jdbcType="INTEGER"/>
        <!-- 7天内好友新增量 -->
        <result column="pu_user_friends_number_new" property="friendsNumberInWeek" jdbcType="INTEGER"/>
        <!-- 最近一次新增好友时间 -->
        <result column="pu_user_friends_newest_date" property="friendsNewestDate" jdbcType="TIMESTAMP"/>
        <!-- 点赞别人相册次数 -->
        <result column="pu_user_photo_liked" property="photoLiked" jdbcType="INTEGER"/>
        <!-- 被别人点赞相册次数 -->
        <result column="pu_user_photo_be_liked" property="photoBeLiked" jdbcType="INTEGER"/>
        <!-- 相册数 -->
        <result column="pu_user_photo_number" property="photoNumber" jdbcType="INTEGER"/>
        <!-- 用户年龄 -->
        <result column="pu_user_age" property="age" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 带有所有需要计算的字段和完整的用户个人资料 -->
    <resultMap id="BaseResultMapWithDetailCount" type="com.geetion.puputuan.pojo.UserDetailWithCount" extends="BaseResultMapWithCount">

        <!-- 匹配总数 -->
        <result column="pu_user_match_times" property="matchTimes" jdbcType="INTEGER"/>
        <!-- 匹配成功数 -->
        <result column="pu_user_match_success_times" property="matchSuccessTimes" jdbcType="INTEGER"/>
        <!-- 匹配成功率 -->
        <result column="pu_user_match_success_ratio" property="matchSuccessRatio" jdbcType="VARCHAR"/>
        <!-- 参与组队数 -->
        <result column="pu_user_join_group" property="joinGroup" jdbcType="INTEGER"/>
        <!-- 当天参与组队数 -->
        <result column="pu_user_join_group_current" property="joinGroupCurrent" jdbcType="INTEGER"/>
        <!-- 好友来源为搜索的数 -->
        <result column="pu_user_friend_from_search" property="friendFromSearch" jdbcType="INTEGER"/>
        <!-- 好友来源为约会成功互评成功的数 -->
        <result column="pu_user_friend_from_activity" property="friendFromActivity" jdbcType="INTEGER"/>
        <!-- 约会数 -->
        <result column="pu_user_activity_times" property="activityTimes" jdbcType="INTEGER"/>
        <!-- 当天约会数 -->
        <result column="pu_user_activity_current_times" property="activityCurrentTimes" jdbcType="INTEGER"/>
        <!-- 约会成功数 -->
        <result column="pu_user_activity_success_times" property="activitySuccessTimes" jdbcType="INTEGER"/>
        <!-- 约会成功率 -->
        <result column="pu_user_activity_success_ratio" property="activitySuccessRatio" jdbcType="VARCHAR"/>
        <!-- 相册来源为即时拍照的数 -->
        <result column="pu_user_photo_by_take" property="photoByTake" jdbcType="INTEGER"/>
        <!-- 相册来源为存储选取的数 -->
        <result column="pu_user_photo_in_album" property="photoInAlbum" jdbcType="INTEGER"/>
        <!-- 被浏览数 -->
        <result column="pu_user_be_viewed_number" property="beViewedNumber" jdbcType="INTEGER"/>
        <!-- superLike次数 -->
        <result column="pu_user_super_like_times" property="superLikeTimes" javaType="INTEGER"/>
    </resultMap>

    <!-- 所有跟用户相关的统计字段 -->
    <resultMap id="BaseResultMapCountUserRelated" type="com.geetion.puputuan.pojo.CountUserRelated">

        <!-- 用户总数 -->
        <result column="user_total" property="userTotal" jdbcType="INTEGER"/>
        <!-- 日新增用户数 -->
        <result column="user_day_total" property="userDayTotal" jdbcType="INTEGER"/>
        <!-- 总相片数 -->
        <result column="photo_total" property="photoTotal" jdbcType="INTEGER"/>
        <!-- 总点赞数 -->
        <result column="photo_like_total" property="photoLikeTotal" jdbcType="INTEGER"/>
        <!-- 日新增点赞数 -->
        <result column="photo_like_day_total" property="photoLikeDayTotal" jdbcType="INTEGER"/>
        <!-- 邀请总数 -->
        <result column="invited_total" property="invitedTotal" jdbcType="INTEGER"/>
        <!-- 人均好友数 -->
        <result column="friend_person_number" property="friendPersonNumber" jdbcType="INTEGER"/>
        <!-- 人均标签数 -->
        <result column="lab_person" property="labPerson" jdbcType="INTEGER"/>
        <!-- 人均相片数 -->
        <result column="photo_person_total" property="photoPersonTotal" jdbcType="INTEGER"/>
        <!-- 人均被浏览数 -->
        <result column="be_viewed_total" property="beViewedTotal" jdbcType="INTEGER"/>
        <!-- 人均被赞数 -->
        <result column="photo_like_person_total" property="photoLikePersonTotal" jdbcType="INTEGER"/>
        <!-- 人均邀请数 -->
        <result column="be_invited_total" property="beInvitedTotal" jdbcType="INTEGER"/>

    </resultMap>

    <!-- 用户统计字段 -->
    <resultMap id="BaseResultMapUserStatisData" type="com.geetion.puputuan.pojo.UserStatisData">
        <result column="pu_user_date" property="date" jdbcType="INTEGER"/>
        <result column="pu_user_total" property="userTotal" jdbcType="INTEGER"/>
        <result column="pu_user_wechat_total" property="wechatTotal" jdbcType="INTEGER"/>
        <result column="pu_user_male_total" property="maleTotal" jdbcType="INTEGER"/>
        <result column="pu_user_male_ratio" property="maleRatio" jdbcType="INTEGER"/>
        <result column="pu_user_female_total" property="femaleTotal" jdbcType="INTEGER"/>
        <result column="pu_user_female_ratio" property="femaleRatio" jdbcType="INTEGER"/>
        <result column="pu_user_age_one" property="ageOneTotal" jdbcType="INTEGER"/>
        <result column="pu_user_age_two" property="ageTwoTotal" jdbcType="INTEGER"/>
        <result column="pu_user_age_three" property="ageThreeTotal" jdbcType="INTEGER"/>
        <result column="pu_user_age_four" property="ageFourTotal" jdbcType="INTEGER"/>
        <result column="pu_user_today_total" property="userTodayTotal" jdbcType="INTEGER"/>
        <result column="pu_user_today_male_total" property="maleTodayTotal" jdbcType="INTEGER"/>
        <result column="pu_user_today_female_total" property="femaleTodayTotal" jdbcType="INTEGER"/>
        <result column="pu_user_friend_one_total" property="friendOneTotal" jdbcType="INTEGER"/>
        <result column="pu_user_friend_two_total" property="friendTwoTotal" jdbcType="INTEGER"/>
        <result column="pu_user_friend_three_total" property="friendThreeTotal" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BaseResultMapMonthStatisData" type="com.geetion.puputuan.pojo.MonthStatisData">
        <result column="pu_job_statis_name" property="name" jdbcType="VARCHAR"/>
        <result column="pu_job_statis_january" property="january" jdbcType="INTEGER"/>
        <result column="pu_job_statis_february" property="february" jdbcType="INTEGER"/>
        <result column="pu_job_statis_march" property="march" jdbcType="INTEGER"/>
        <result column="pu_job_statis_april" property="april" jdbcType="INTEGER"/>
        <result column="pu_job_statis_may" property="may" jdbcType="INTEGER"/>
        <result column="pu_job_statis_june" property="june" jdbcType="INTEGER"/>
        <result column="pu_job_statis_july" property="july" jdbcType="INTEGER"/>
        <result column="pu_job_statis_august" property="august" jdbcType="INTEGER"/>
        <result column="pu_job_statis_september" property="september" jdbcType="INTEGER"/>
        <result column="pu_job_statis_october" property="october" jdbcType="INTEGER"/>
        <result column="pu_job_statis_november" property="november" jdbcType="INTEGER"/>
        <result column="pu_job_statis_december" property="december" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BaseResultMapInterestStatisData" type="com.geetion.puputuan.pojo.StatisData">
        <result column="pu_interest_total_name" property="name" jdbcType="VARCHAR"/>
        <result column="pu_interest_total_total" property="total" jdbcType="INTEGER"/>
        <result column="pu_interest_total_ratio" property="ratio" jdbcType="VARCHAR"/>
        <result column="pu_interest_total_male" property="maleTotal" jdbcType="INTEGER"/>
        <result column="pu_interest_total_female" property="femaleTotal" jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="BaseResultMapJobStatisData" type="com.geetion.puputuan.pojo.StatisData">
        <result column="pu_job_total_name" property="name" jdbcType="VARCHAR"/>
        <result column="pu_job_total_total" property="total" jdbcType="INTEGER"/>
        <result column="pu_job_total_ratio" property="ratio" jdbcType="VARCHAR"/>
        <result column="pu_job_total_male" property="maleTotal" jdbcType="INTEGER"/>
        <result column="pu_job_total_female" property="femaleTotal" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="tableProperty">
        pu_user.id as pu_user_id,
        pu_user.user_id as pu_user_user_id,
        pu_user.phone as pu_user_phone,
        pu_user.wechat_id as pu_user_wechat_id,
        pu_user.nick_name as pu_user_nick_name,
        pu_user.nick_name_chr as pu_user_nick_name_chr,
        pu_user.identify as pu_user_identify,
        pu_user.sex as pu_user_sex,
        pu_user.sign as pu_user_sign,
        pu_user.birthday as pu_user_birthday,
        pu_user.head_id as pu_user_head_id,
        pu_user.constellation as pu_user_constellation,
        pu_user.province_id as pu_user_province_id,
        pu_user.province as pu_user_province,
        pu_user.city_id as pu_user_city_id,
        pu_user.city as pu_user_city,
        pu_user.area_id as pu_user_area_id,
        pu_user.area as pu_user_area,
        pu_user.type as pu_user_type,
        pu_user.device as pu_user_device,
        pu_user.create_time as pu_user_create_time,
        pu_user.friend_update_time as pu_user_friend_update_time
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="tableProperty"/>,
        <include refid="com.geetion.generic.userbase.dao.UserBaseDAO.tableProperty"/>,
        <!--include refid="com.geetion.generic.districtmodule.dao.ProvinceDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.CityDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.AreaDAO.tableProperty"/,-->
        <include refid="com.geetion.puputuan.dao.JobDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.InterestDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.PhotoDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.FancyDAO.tableProperty"/>
        FROM pu_user
        LEFT JOIN geetion_user_base ON geetion_user_base.id = pu_user.user_id
        <!--LEFT JOIN geetion_province ON geetion_province.code = pu_user.province_id
        LEFT JOIN geetion_city ON geetion_city.code = pu_user.city_id
        LEFT JOIN geetion_area ON geetion_area.code = pu_user.area_id-->
        LEFT JOIN pu_job_user ON pu_job_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的兴趣 -->
        LEFT JOIN pu_job ON pu_job.id = pu_job_user.job_id AND pu_job.status = 1
        LEFT JOIN pu_interest_user ON pu_interest_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的职业 -->
        LEFT JOIN pu_interest ON pu_interest.id = pu_interest_user.interest_id AND pu_interest.status = 1
        LEFT JOIN pu_photo ON pu_photo.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的喜爱夜蒲类型 -->
        LEFT JOIN pu_fancy_user ON pu_fancy_user.user_id = pu_user.user_id
        LEFT JOIN pu_fancy ON pu_fancy.id = pu_fancy_user.fancy_id AND pu_fancy.status = 1
        WHERE pu_user.id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="tableProperty"/>,
        <include refid="com.geetion.generic.userbase.dao.UserBaseDAO.tableProperty"/>,
        <!--include refid="com.geetion.generic.districtmodule.dao.ProvinceDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.CityDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.AreaDAO.tableProperty"/,-->
        <include refid="com.geetion.puputuan.dao.JobDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.InterestDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.PhotoDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.FancyDAO.tableProperty"/>
        FROM pu_user
        LEFT JOIN geetion_user_base ON geetion_user_base.id = pu_user.user_id
        <!--LEFT JOIN geetion_province ON geetion_province.code = pu_user.province_id
        LEFT JOIN geetion_city ON geetion_city.code = pu_user.city_id
        LEFT JOIN geetion_area ON geetion_area.code = pu_user.area_id-->
        LEFT JOIN pu_job_user ON pu_job_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的兴趣 -->
        LEFT JOIN pu_job ON pu_job.id = pu_job_user.job_id AND pu_job.status = 1
        LEFT JOIN pu_interest_user ON pu_interest_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的职业 -->
        LEFT JOIN pu_interest ON pu_interest.id = pu_interest_user.interest_id AND pu_interest.status = 1
        LEFT JOIN pu_photo ON pu_photo.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的喜爱夜蒲类型 -->
        LEFT JOIN pu_fancy_user ON pu_fancy_user.user_id = pu_user.user_id
        LEFT JOIN pu_fancy ON pu_fancy.id = pu_fancy_user.fancy_id AND pu_fancy.status = 1
        where pu_user.user_id = #{userId,jdbcType=BIGINT}
    </select>

    <!-- 查询自己的个人兴趣，并且带有兴致职业，其中包含了 自己没有选择但是是属于系统的兴趣职业 -->
    <select id="selectByUserIdWithSystem" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT
        <include refid="tableProperty"/>,
        <include refid="com.geetion.generic.userbase.dao.UserBaseDAO.tableProperty"/>,
        <!--include refid="com.geetion.generic.districtmodule.dao.ProvinceDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.CityDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.AreaDAO.tableProperty"/,-->
        <include refid="com.geetion.puputuan.dao.JobDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.InterestDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.PhotoDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.FancyDAO.tableProperty"/>
        if(pu_interest_user.interest_id = pu_interest.id, TRUE, FALSE) AS pu_interest_have_select,
        if(pu_job_user.job_id = pu_job.id, TRUE, FALSE) AS pu_job_have_select
        FROM pu_user
        LEFT JOIN geetion_user_base ON geetion_user_base.id = pu_user.user_id
        <!--LEFT JOIN geetion_province ON geetion_province.code = pu_user.province_id
        LEFT JOIN geetion_city ON geetion_city.code = pu_user.city_id
        LEFT JOIN geetion_area ON geetion_area.code = pu_user.area_id-->
        LEFT JOIN pu_job_user ON pu_job_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的兴趣 以及系统的兴趣 -->
        LEFT JOIN pu_job ON (pu_job.id = pu_job_user.job_id OR pu_job.type = 1) AND pu_job.status = 1
        LEFT JOIN pu_interest_user ON pu_interest_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的职业 以及系统的职业 -->
        LEFT JOIN pu_interest ON (pu_interest.id = pu_interest_user.interest_id OR pu_interest.type = 1) AND
        pu_interest.status = 1
        LEFT JOIN pu_photo ON pu_photo.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的喜爱夜蒲类型 -->
        LEFT JOIN pu_fancy ON pu_fancy.id = pu_fancy_user.fancy_id AND pu_fancy.status = 1
        LEFT JOIN pu_fancy_user ON pu_fancy_user.user_id = pu_user.user_id
        where pu_user.user_id = #{userId,jdbcType=BIGINT}
    </select>

    <select id="selectParam" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        <include refid="tableProperty"/>,
        <include refid="com.geetion.generic.userbase.dao.UserBaseDAO.tableProperty"/>,
        <!--include refid="com.geetion.generic.districtmodule.dao.ProvinceDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.CityDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.AreaDAO.tableProperty"/,-->
        <include refid="com.geetion.puputuan.dao.JobDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.InterestDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.PhotoDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.FancyDAO.tableProperty"/>
        FROM pu_user
        LEFT JOIN geetion_user_base ON geetion_user_base.id = pu_user.user_id
        <!--LEFT JOIN geetion_province ON geetion_province.code = pu_user.province_id
        LEFT JOIN geetion_city ON geetion_city.code = pu_user.city_id
        LEFT JOIN geetion_area ON geetion_area.code = pu_user.area_id-->
        LEFT JOIN pu_job_user ON pu_job_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的兴趣 -->
        LEFT JOIN pu_job ON pu_job.id = pu_job_user.job_id AND pu_job.status = 1
        LEFT JOIN pu_interest_user ON pu_interest_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的职业 -->
        LEFT JOIN pu_interest ON pu_interest.id = pu_interest_user.interest_id AND pu_interest.status = 1
        LEFT JOIN pu_photo ON pu_photo.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的喜爱夜蒲类型 -->
        LEFT JOIN pu_fancy_user ON pu_fancy_user.user_id = pu_user.user_id
        LEFT JOIN pu_fancy ON pu_fancy.id = pu_fancy_user.fancy_id AND pu_fancy.status = 1
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                and pu_user.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId != null">
                and pu_user.user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="phone != null">
                and pu_user.phone = #{phone,jdbcType=VARCHAR}
            </if>
            <if test="phones != null">
                and pu_user.phone IN (
                <foreach collection="phones" item="item" index="index" separator=",">
                    #{item}
                </foreach>
                )
            </if>
            <if test="filterShieldPhone != null">
                and pu_user.user_id not in (
                  SELECT pu_setting.user_id from pu_setting WHERE pu_setting.shield_phone_on = '0'
                )
            </if>
            <if test="wechatId != null">
                and pu_user.wechat_id = #{wechatId,jdbcType=VARCHAR}
            </if>
            <if test="nickName != null">
                and pu_user.nick_name like concat('%',#{nickName,jdbcType=VARCHAR},'%')
            </if>
            <if test="identify != null">
                and pu_user.identify like concat('%', #{identify,jdbcType=VARCHAR},'%')
            </if>
            <if test="sex != null">
                and pu_user.sex = #{sex,jdbcType=VARCHAR}
            </if>
            <if test="sign != null">
                and pu_user.sign = #{sign,jdbcType=LONGVARCHAR}
            </if>
            <if test="birthday != null">
                and pu_user.birthday = #{birthday,jdbcType=TIMESTAMP}
            </if>
            <if test="headId != null">
                and pu_user.head_id = #{headId,jdbcType=BIGINT}
            </if>
            <if test="constellation != null">
                and pu_user.constellation = #{constellation,jdbcType=VARCHAR}
            </if>
            <if test="provinceId != null">
                and pu_user.province_id = #{provinceId,jdbcType=INTEGER}
            </if>
            <if test="cityId != null">
                and pu_user.city_id = #{cityId,jdbcType=INTEGER}
            </if>
            <if test="areaId != null">
                and pu_user.area_id = #{areaId,jdbcType=INTEGER}
            </if>
            <if test="type != null">
                and pu_user.type = #{type,jdbcType=INTEGER}
            </if>
            <if test="device != null">
                and pu_user.device = #{device,jdbcType=INTEGER}
            </if>
            <if test="createTime != null">
                and pu_user.create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </trim>
        order by pu_user.id desc
    </select>

    <select id="selectOne" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        <include refid="tableProperty"/>,
        <include refid="com.geetion.generic.userbase.dao.UserBaseDAO.tableProperty"/>,
        <!--include refid="com.geetion.generic.districtmodule.dao.ProvinceDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.CityDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.AreaDAO.tableProperty"/,-->
        <include refid="com.geetion.puputuan.dao.JobDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.InterestDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.PhotoDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.FancyDAO.tableProperty"/>
        FROM pu_user
        LEFT JOIN geetion_user_base ON geetion_user_base.id = pu_user.user_id
        <!--LEFT JOIN geetion_province ON geetion_province.code = pu_user.province_id
        LEFT JOIN geetion_city ON geetion_city.code = pu_user.city_id
        LEFT JOIN geetion_area ON geetion_area.code = pu_user.area_id-->
        LEFT JOIN pu_job_user ON pu_job_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的兴趣 -->
        LEFT JOIN pu_job ON pu_job.id = pu_job_user.job_id AND pu_job.status = 1
        LEFT JOIN pu_interest_user ON pu_interest_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的职业 -->
        LEFT JOIN pu_interest ON pu_interest.id = pu_interest_user.interest_id AND pu_interest.status = 1
        LEFT JOIN pu_photo ON pu_photo.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的喜爱夜蒲类型 -->
        LEFT JOIN pu_fancy_user ON pu_fancy_user.user_id = pu_user.user_id
        LEFT JOIN pu_fancy ON pu_fancy.id = pu_fancy_user.fancy_id AND pu_fancy.status = 1
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                and pu_user.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId != null">
                and pu_user.user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="phone != null">
                and pu_user.phone = #{phone,jdbcType=VARCHAR}
            </if>
            <if test="wechatId != null">
                and pu_user.wechat_id = #{wechatId,jdbcType=VARCHAR}
            </if>
            <if test="nickName != null">
                and pu_user.nick_name = #{nickName,jdbcType=VARCHAR}
            </if>
            <if test="identify != null">
                and pu_user.identify = #{identify,jdbcType=VARCHAR}
            </if>
            <if test="sex != null">
                and pu_user.sex = #{sex,jdbcType=VARCHAR}
            </if>
            <if test="sign != null">
                and pu_user.sign = #{sign,jdbcType=LONGVARCHAR}
            </if>
            <if test="birthday != null">
                and pu_user.birthday = #{birthday,jdbcType=TIMESTAMP}
            </if>
            <if test="headId != null">
                and pu_user.head_id = #{headId,jdbcType=BIGINT}
            </if>
            <if test="constellation != null">
                and pu_user.constellation = #{constellation,jdbcType=VARCHAR}
            </if>
            <if test="provinceId != null">
                and pu_user.province_id = #{provinceId,jdbcType=INTEGER}
            </if>
            <if test="cityId != null">
                and pu_user.city_id = #{cityId,jdbcType=INTEGER}
            </if>
            <if test="areaId != null">
                and pu_user.area_id = #{areaId,jdbcType=INTEGER}
            </if>
            <if test="type != null">
                and pu_user.type = #{type,jdbcType=INTEGER}
            </if>
            <if test="device != null">
                and pu_user.device = #{device,jdbcType=INTEGER}
            </if>
            <if test="createTime != null">
                and pu_user.create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </trim>
        order by pu_user.identify desc
        limit 1
    </select>

    <!-- 根据param中携带的参数查询用户 -->
    <select id="selectByParam" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        <include refid="tableProperty"/>,
        <include refid="com.geetion.generic.userbase.dao.UserBaseDAO.tableProperty"/>,
        <!--include refid="com.geetion.generic.districtmodule.dao.ProvinceDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.CityDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.AreaDAO.tableProperty"/,-->
        <include refid="com.geetion.puputuan.dao.JobDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.InterestDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.PhotoDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.FancyDAO.tableProperty"/>
        FROM pu_user
        LEFT JOIN geetion_user_base ON geetion_user_base.id = pu_user.user_id
        <!--LEFT JOIN geetion_province ON geetion_province.code = pu_user.province_id
        LEFT JOIN geetion_city ON geetion_city.code = pu_user.city_id
        LEFT JOIN geetion_area ON geetion_area.code = pu_user.area_id-->
        LEFT JOIN pu_job_user ON pu_job_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的兴趣 -->
        LEFT JOIN pu_job ON pu_job.id = pu_job_user.job_id AND pu_job.status = 1
        LEFT JOIN pu_interest_user ON pu_interest_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的职业 -->
        LEFT JOIN pu_interest ON pu_interest.id = pu_interest_user.interest_id AND pu_interest.status = 1
        LEFT JOIN pu_photo ON pu_photo.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的喜爱夜蒲类型 -->
        LEFT JOIN pu_fancy_user ON pu_fancy_user.user_id = pu_user.user_id
        LEFT JOIN pu_fancy ON pu_fancy.id = pu_fancy_user.fancy_id AND pu_fancy.status = 1
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                and pu_user.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId != null">
                and pu_user.user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="phone != null">
                and pu_user.phone = #{phone,jdbcType=VARCHAR}
            </if>
            <if test="wechatId != null">
                and pu_user.wechat_id = #{wechatId,jdbcType=VARCHAR}
            </if>
            <if test="nickName != null">
                and pu_user.nick_name = #{nickName,jdbcType=VARCHAR}
            </if>
            <if test="identify != null">
                and pu_user.identify = #{identify,jdbcType=VARCHAR}
            </if>
            <if test="sex != null">
                and pu_user.sex = #{sex,jdbcType=VARCHAR}
            </if>
            <if test="sign != null">
                and pu_user.sign = #{sign,jdbcType=LONGVARCHAR}
            </if>
            <if test="birthday != null">
                and pu_user.birthday = #{birthday,jdbcType=TIMESTAMP}
            </if>
            <if test="headId != null">
                and pu_user.head_id = #{headId,jdbcType=BIGINT}
            </if>
            <if test="constellation != null">
                and pu_user.constellation = #{constellation,jdbcType=VARCHAR}
            </if>
            <if test="provinceId != null">
                and pu_user.province_id = #{provinceId,jdbcType=INTEGER}
            </if>
            <if test="cityId != null">
                and pu_user.city_id = #{cityId,jdbcType=INTEGER}
            </if>
            <if test="areaId != null">
                and pu_user.area_id = #{areaId,jdbcType=INTEGER}
            </if>
            <if test="type != null">
                and pu_user.type = #{type,jdbcType=INTEGER}
            </if>
            <if test="device != null">
                and pu_user.device = #{device,jdbcType=INTEGER}
            </if>
            <if test="createTime != null">
                and pu_user.create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </trim>
        order by pu_user.id desc
    </select>

    <!-- 根据昵称或identity查询用户 -->
    <select id="selectByIdentifyName" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT
        <include refid="tableProperty"/>,
        <include refid="com.geetion.generic.userbase.dao.UserBaseDAO.tableProperty"/>,
        <!--include refid="com.geetion.generic.districtmodule.dao.ProvinceDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.CityDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.AreaDAO.tableProperty"/,-->
        <include refid="com.geetion.puputuan.dao.JobDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.InterestDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.PhotoDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.FancyDAO.tableProperty"/>
        FROM pu_user
        LEFT JOIN geetion_user_base ON geetion_user_base.id = pu_user.user_id
        <!--LEFT JOIN geetion_province ON geetion_province.code = pu_user.province_id
        LEFT JOIN geetion_city ON geetion_city.code = pu_user.city_id
        LEFT JOIN geetion_area ON geetion_area.code = pu_user.area_id-->
        LEFT JOIN pu_job_user ON pu_job_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的兴趣 -->
        LEFT JOIN pu_job ON pu_job.id = pu_job_user.job_id AND pu_job.status = 1
        LEFT JOIN pu_interest_user ON pu_interest_user.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的职业 -->
        LEFT JOIN pu_interest ON pu_interest.id = pu_interest_user.interest_id AND pu_interest.status = 1
        LEFT JOIN pu_photo ON pu_photo.user_id = pu_user.user_id
        <!-- 查询没有被屏蔽的喜爱夜蒲类型 -->
        LEFT JOIN pu_fancy_user ON pu_fancy_user.user_id = pu_user.user_id
        LEFT JOIN pu_fancy ON pu_fancy.id = pu_fancy_user.fancy_id AND pu_fancy.status = 1
        <trim prefix="where" prefixOverrides="and|or">
            <if test="nickName != null">
                or pu_user.nick_name = #{nickName,jdbcType=VARCHAR}
            </if>
            <if test="identify != null">
                or pu_user.identify = #{identify,jdbcType=VARCHAR}
            </if>
        </trim>
        order by pu_user.id desc
    </select>

    <update id="updateByUserId" parameterType="com.geetion.puputuan.model.User">
        update pu_user
        <set>
            <if test="nickName != null">
                pu_user.nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="nickNameChr != null">
                pu_user.nick_name_chr = #{nickNameChr,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                pu_user.phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="wechatId != null">
                pu_user.wechat_id = #{wechatId,jdbcType=VARCHAR},
            </if>
            <if test="identify != null">
                pu_user.identify = #{identify,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                pu_user.sex = #{sex,jdbcType=VARCHAR},
            </if>
            <if test="sign != null">
                pu_user.sign = #{sign,jdbcType=LONGVARCHAR},
            </if>
            <if test="birthday != null">
                pu_user.birthday = #{birthday,jdbcType=TIMESTAMP},
            </if>
            <if test="headId != null">
                pu_user.head_id = #{headId,jdbcType=BIGINT},
            </if>
            <if test="constellation != null">
                pu_user.constellation = #{constellation,jdbcType=VARCHAR},
            </if>
            <if test="provinceId != null">
                pu_user.province_id = #{provinceId,jdbcType=INTEGER},
            </if>
            <if test="province != null">
                pu_user.province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="cityId != null">
                pu_user.city_id = #{cityId,jdbcType=INTEGER},
            </if>
            <if test="city != null">
                pu_user.city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="areaId != null">
                pu_user.area_id = #{areaId,jdbcType=INTEGER},
            </if>
            <if test="area != null">
                pu_user.area = #{area,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                pu_user.type = #{type,jdbcType=INTEGER},
            </if>
            <if test="device != null">
                pu_user.device = #{device,jdbcType=INTEGER},
            </if>
            <if test="friendUpdateTime != null">
                pu_user.friend_update_time = #{friendUpdateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where pu_user.user_id = #{userId,jdbcType=BIGINT}
    </update>


    <!--  查询用户，带上各种计算  列表 -->
    <select id="selectParamWithCount" parameterType="java.util.Map" resultMap="BaseResultMapWithCount">
        SELECT
        <include refid="tableProperty"/>,
        <include refid="com.geetion.generic.userbase.dao.UserBaseDAO.tableProperty"/>,
        <!--include refid="com.geetion.generic.districtmodule.dao.ProvinceDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.CityDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.AreaDAO.tableProperty"/,-->
        <!-- 邀请次数 -->
        ifnull(invited_times.times, 0) AS pu_user_invited_times,
        <!-- 7天内邀请次数 -->
        ifnull(invited_times_in_week.times, 0) AS pu_user_invited_times_in_week,
        <!-- 最近发起邀请时间 -->
        ifnull(invited_times_in_week_b.create_time, 0) AS pu_user_invited_lately_date,
        <!-- 被邀请次数 -->
        ifnull(be_invited_times.times, 0) AS pu_user_be_invited_times,
        <!-- 7天内被邀请次数 -->
        ifnull(be_invited_times_in_week.times, 0) AS pu_user_be_invited_times_in_week,
        <!-- 最近发起邀请时间 -->
        ifnull(be_invited_times_in_week_b.create_time, 0) AS pu_user_be_invited_lately_date,
        <!-- 好友数 -->
        ifnull(friends_number.times, 0) AS pu_user_friends_number,
        <!-- 7天内好友新增量 -->
        ifnull(friends_number_new.times, 0) AS pu_user_friends_number_new,
        <!-- 最近一次新增好友时间 -->
        ifnull(friends_newest.create_time, 0) AS pu_user_friends_newest_date,
        <!-- 被别人点赞相册次数 -->
        ifnull(photo_be_liked.times, 0) AS pu_user_photo_be_liked,
        <!-- 点赞别人相册次数 -->
        ifnull(photo_liked.times, 0) AS pu_user_photo_liked,
        YEAR(CURRENT_DATE) - YEAR(pu_user.birthday) pu_user_age
        FROM pu_user
        LEFT JOIN geetion_user_base ON geetion_user_base.id = pu_user.user_id
        <!--LEFT JOIN geetion_province ON geetion_province.code = pu_user.province_id
        LEFT JOIN geetion_city ON geetion_city.code = pu_user.city_id
        LEFT JOIN geetion_area ON geetion_area.code = pu_user.area_id-->
        <!-- 邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member_history.user_id
        FROM pu_group_member_history WHERE pu_group_member_history.type = 0 GROUP BY pu_group_member_history.user_id
        ) AS invited_times ON invited_times.user_id = pu_user.user_id
        <!-- 7天内邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member_history.user_id
        FROM pu_group_member_history WHERE pu_group_member_history.type = 0
        and pu_group_member_history.create_time > DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        GROUP BY pu_group_member_history.user_id
        ) AS invited_times_in_week ON invited_times_in_week.user_id = pu_user.user_id
        <!-- 最近发起邀请时间 -->
        LEFT JOIN (
        SELECT pu_group_member_history.user_id, max(create_time) AS create_time FROM pu_group_member_history
        WHERE type = 0
        GROUP BY user_id
        ) AS invited_times_in_week_b ON invited_times_in_week_b.user_id = pu_user.user_id
        <!-- 被邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member_history.user_id FROM pu_group_member_history
        WHERE pu_group_member_history.type = 1 GROUP BY pu_group_member_history.user_id
        ) AS be_invited_times ON be_invited_times.user_id = pu_user.user_id
        <!-- 7天内被邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member_history.user_id FROM pu_group_member_history
        WHERE pu_group_member_history.type = 1
        and pu_group_member_history.create_time > DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        GROUP BY pu_group_member_history.user_id
        ) AS be_invited_times_in_week ON be_invited_times_in_week.user_id = pu_user.user_id
        <!-- 最近被邀请时间 -->
        LEFT JOIN (
        SELECT pu_group_member_history.user_id, max(create_time) AS create_time FROM pu_group_member_history
        WHERE type = 1
        GROUP BY user_id
        ) AS be_invited_times_in_week_b ON be_invited_times_in_week_b.user_id = pu_user.user_id
        <!-- 好友数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_friend_relationship.user_id
        FROM pu_friend_relationship GROUP BY pu_friend_relationship.user_id
        ) AS friends_number ON friends_number.user_id = pu_user.user_id
        <!-- 7天内好友新增量 -->
        LEFT JOIN (SELECT count(*) times, user_id FROM pu_friend_relationship
        WHERE pu_friend_relationship.create_time > DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        GROUP BY pu_friend_relationship.user_id
        ) AS friends_number_new ON friends_number_new.user_id = pu_user.user_id
        <!-- 最近一次新增好友时间 -->
        LEFT JOIN (SELECT user_id, MAX(create_time) create_time
        FROM pu_friend_relationship GROUP BY pu_friend_relationship.user_id
        ) AS friends_newest ON friends_newest.user_id = pu_user.user_id
        <!-- 被别人点赞相册次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_photo.user_id FROM pu_photo_like ,pu_photo
        WHERE pu_photo.id = pu_photo_like.photo_id GROUP BY pu_photo.user_id
        ) AS photo_be_liked ON photo_be_liked.user_id = pu_user.user_id
        <!-- 点赞别人相册次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_photo_like.user_id
        FROM pu_photo_like GROUP BY pu_photo_like.user_id
        ) AS photo_liked ON photo_liked.user_id = pu_user.user_id
        <trim prefix="where" prefixOverrides="and|or">
            <if test="id != null">
                and pu_user.id = #{id,jdbcType=BIGINT}
            </if>
            <if test="userId != null">
                and pu_user.user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test="phone != null">
                and pu_user.phone like concat('%', #{phone,jdbcType=VARCHAR},'%' )
            </if>
            <if test="wechatId != null">
                and pu_user.wechat_id = #{wechatId,jdbcType=VARCHAR}
            </if>
            <if test="nickName != null">
                and pu_user.nick_name like concat('%',#{nickName,jdbcType=VARCHAR},'%')
            </if>
            <if test="identify != null">
                and pu_user.identify like concat('%', #{identify,jdbcType=VARCHAR},'%')
            </if>
            <if test="sex != null">
                and pu_user.sex = #{sex,jdbcType=VARCHAR}
            </if>
            <if test="sign != null">
                and pu_user.sign = #{sign,jdbcType=LONGVARCHAR}
            </if>
            <if test="birthday != null">
                and pu_user.birthday = #{birthday,jdbcType=TIMESTAMP}
            </if>
            <if test="headId != null">
                and pu_user.head_id = #{headId,jdbcType=BIGINT}
            </if>
            <if test="constellation != null">
                and pu_user.constellation = #{constellation,jdbcType=VARCHAR}
            </if>
            <if test="provinceId != null">
                and pu_user.province_id = #{provinceId,jdbcType=INTEGER}
            </if>
            <if test="cityId != null">
                and pu_user.city_id = #{cityId,jdbcType=INTEGER}
            </if>
            <if test="areaId != null">
                and pu_user.area_id = #{areaId,jdbcType=INTEGER}
            </if>
            <if test="type != null">
                and pu_user.type = #{type,jdbcType=INTEGER}
            </if>
            <if test="device != null">
                and pu_user.device = #{device,jdbcType=INTEGER}
            </if>
            <if test="createTime != null">
                and pu_user.create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <!-- 年龄 -->
            <if test="age != null">
                and YEAR(CURRENT_DATE) - YEAR(pu_user.birthday) = #{age,jdbcType=INTEGER}
            </if>
            <if test="registerTimeBegin != null">
                and DATE(pu_user.create_time) &gt;= DATE(#{registerTimeBegin,jdbcType=TIMESTAMP})
            </if>
            <if test="registerTimeEnd != null">
                and DATE(pu_user.create_time) &lt;= DATE(#{registerTimeEnd,jdbcType=TIMESTAMP})
            </if>
        </trim>
        order by pu_user.id desc
    </select>

    <!-- 批量 查询用户，带上各种计算  列表 -->
    <select id="selectUserListWithCountByIdsOrPhones" parameterType="java.util.Map" resultMap="BaseResultMapWithCount">
        SELECT
        <include refid="tableProperty"/>,
        <include refid="com.geetion.generic.userbase.dao.UserBaseDAO.tableProperty"/>,
        <!--include refid="com.geetion.generic.districtmodule.dao.ProvinceDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.CityDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.AreaDAO.tableProperty"/,-->
        <!-- 邀请次数 -->
        ifnull(invited_times.times, 0) AS pu_user_invited_times,
        <!-- 7天内邀请次数 -->
        ifnull(invited_times_in_week.times, 0) AS pu_user_invited_times_in_week,
        <!-- 最近发起邀请时间 -->
        ifnull(invited_times_in_week_b.create_time, 0) AS pu_user_invited_lately_date,
        <!-- 被邀请次数 -->
        ifnull(be_invited_times.times, 0) AS pu_user_be_invited_times,
        <!-- 7天内被邀请次数 -->
        ifnull(be_invited_times_in_week.times, 0) AS pu_user_be_invited_times_in_week,
        <!-- 最近发起邀请时间 -->
        ifnull(be_invited_times_in_week_b.create_time, 0) AS pu_user_be_invited_lately_date,
        <!-- 好友数 -->
        ifnull(friends_number.times, 0) AS pu_user_friends_number,
        <!-- 7天内好友新增量 -->
        ifnull(friends_number_new.times, 0) AS pu_user_friends_number_new,
        <!-- 最近一次新增好友时间 -->
        ifnull(friends_newest.create_time, 0) AS pu_user_friends_newest_date,
        <!-- 被别人点赞相册次数 -->
        ifnull(photo_be_liked.times, 0) AS pu_user_photo_be_liked,
        <!-- 点赞别人相册次数 -->
        ifnull(photo_liked.times, 0) AS pu_user_photo_liked,
        YEAR(CURRENT_DATE) - YEAR(pu_user.birthday) pu_user_age
        FROM pu_user
        LEFT JOIN geetion_user_base ON geetion_user_base.id = pu_user.user_id
        <!--LEFT JOIN geetion_province ON geetion_province.code = pu_user.province_id
        LEFT JOIN geetion_city ON geetion_city.code = pu_user.city_id
        LEFT JOIN geetion_area ON geetion_area.code = pu_user.area_id-->
        <!-- 邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member_history.user_id
        FROM pu_group_member_history WHERE pu_group_member_history.type = 0 GROUP BY pu_group_member_history.user_id
        ) AS invited_times ON invited_times.user_id = pu_user.user_id
        <!-- 7天内邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member_history.user_id
        FROM pu_group_member_history WHERE pu_group_member_history.type = 0
        and pu_group_member_history.create_time > DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        GROUP BY pu_group_member_history.user_id
        ) AS invited_times_in_week ON invited_times_in_week.user_id = pu_user.user_id
        <!-- 最近发起邀请时间 -->
        LEFT JOIN (
        SELECT pu_group_member_history.user_id, max(create_time) AS create_time FROM pu_group_member_history
        WHERE type = 0
        GROUP BY user_id
        ) AS invited_times_in_week_b ON invited_times_in_week_b.user_id = pu_user.user_id
        <!-- 被邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member_history.user_id FROM pu_group_member_history
        WHERE pu_group_member_history.type = 1 GROUP BY pu_group_member_history.user_id
        ) AS be_invited_times ON be_invited_times.user_id = pu_user.user_id
        <!-- 7天内被邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member_history.user_id FROM pu_group_member_history
        WHERE pu_group_member_history.type = 1
        and pu_group_member_history.create_time > DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        GROUP BY pu_group_member_history.user_id
        ) AS be_invited_times_in_week ON be_invited_times_in_week.user_id = pu_user.user_id
        <!-- 最近被邀请时间 -->
        LEFT JOIN (
        SELECT pu_group_member_history.user_id, max(create_time) AS create_time FROM pu_group_member_history
        WHERE type = 1
        GROUP BY user_id
        ) AS be_invited_times_in_week_b ON be_invited_times_in_week_b.user_id = pu_user.user_id
        <!-- 好友数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_friend_relationship.user_id
        FROM pu_friend_relationship GROUP BY pu_friend_relationship.user_id
        ) AS friends_number ON friends_number.user_id = pu_user.user_id
        <!-- 7天内好友新增量 -->
        LEFT JOIN (SELECT count(*) times, user_id FROM pu_friend_relationship
        WHERE pu_friend_relationship.create_time > DATE_SUB(CURDATE(), INTERVAL 7 DAY)
        GROUP BY pu_friend_relationship.user_id
        ) AS friends_number_new ON friends_number_new.user_id = pu_user.user_id
        <!-- 最近一次新增好友时间 -->
        LEFT JOIN (SELECT user_id, MAX(create_time) create_time
        FROM pu_friend_relationship GROUP BY pu_friend_relationship.user_id
        ) AS friends_newest ON friends_newest.user_id = pu_user.user_id
        <!-- 被别人点赞相册次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_photo.user_id FROM pu_photo_like ,pu_photo
        WHERE pu_photo.id = pu_photo_like.photo_id GROUP BY pu_photo.user_id
        ) AS photo_be_liked ON photo_be_liked.user_id = pu_user.user_id
        <!-- 点赞别人相册次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_photo_like.user_id
        FROM pu_photo_like GROUP BY pu_photo_like.user_id
        ) AS photo_liked ON photo_liked.user_id = pu_user.user_id
        <trim prefix="where" prefixOverrides="and|or">
            <if test="userType==1">
                and pu_user.identify in
                <if test="userData != null and userData.size>0">
                    <foreach item="item" index="index" collection="userData" open="("
                             separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            </if>
            <if test="userType==2">
                and pu_user.phone in
                <if test="userData != null and userData.size>0">
                    <foreach item="item" index="index" collection="userData" open="("
                             separator="," close=")">
                        #{item}
                    </foreach>
                </if>
            </if>
        </trim>
        order by pu_user.id desc
    </select>


    <!-- 查询用户，带上一些计算 单个  -->
    <select id="selectWithCountByUserId" parameterType="java.lang.Long" resultMap="BaseResultMapWithCount">
        SELECT
        <include refid="tableProperty"/>,
        <include refid="com.geetion.generic.userbase.dao.UserBaseDAO.tableProperty"/>,
        <!--include refid="com.geetion.generic.districtmodule.dao.ProvinceDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.CityDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.AreaDAO.tableProperty"/,-->
        <!-- 邀请次数 -->
        ifnull(invited_times.times, 0) AS pu_user_invited_times,
        <!-- 被邀请次数 -->
        ifnull(be_invited_times.times, 0) AS pu_user_be_invited_times,
        <!-- 好友数 -->
        ifnull(friends_number.times, 0) AS pu_user_friends_number,
        <!-- 被别人点赞相册次数 -->
        ifnull(photo_be_liked.times, 0) AS pu_user_photo_be_liked,
        <!-- 点赞别人相册次数 -->
        ifnull(photo_liked.times, 0) AS pu_user_photo_liked
        FROM pu_user
        LEFT JOIN geetion_user_base ON geetion_user_base.id = pu_user.user_id
        <!--LEFT JOIN geetion_province ON geetion_province.code = pu_user.province_id
        LEFT JOIN geetion_city ON geetion_city.code = pu_user.city_id
        LEFT JOIN geetion_area ON geetion_area.code = pu_user.area_id-->
        <!-- 邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member.user_id
        FROM pu_group_member WHERE pu_group_member.type = 0 GROUP BY pu_group_member.user_id
        ) AS invited_times ON invited_times.user_id = pu_user.user_id
        <!-- 被邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member.user_id FROM pu_group_member
        WHERE pu_group_member.type = 1 GROUP BY pu_group_member.user_id
        ) AS be_invited_times ON be_invited_times.user_id = pu_user.user_id
        <!-- 好友数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_friend_relationship.user_id
        FROM pu_friend_relationship GROUP BY pu_friend_relationship.user_id
        ) AS friends_number ON friends_number.user_id = pu_user.user_id
        <!-- 被别人点赞相册次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_photo.user_id FROM pu_photo_like ,pu_photo
        WHERE pu_photo.id = pu_photo_like.photo_id GROUP BY pu_photo.user_id
        ) AS photo_be_liked ON photo_be_liked.user_id = pu_user.user_id
        <!-- 点赞别人相册次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_photo_like.user_id FROM pu_photo_like,pu_photo
        WHERE pu_photo.id = pu_photo_like.photo_id GROUP BY pu_photo_like.user_id
        ) AS photo_liked ON photo_liked.user_id = pu_user.user_id
        <trim prefix="where" prefixOverrides="and|or">
            <if test="userId != null">
                and pu_user.user_id = #{userId,jdbcType=BIGINT}
            </if>
        </trim>
    </select>


    <!-- 查询用户详细的个人资料，带上所有计算 单个 -->
    <select id="selectWithDetailCountByUserId" parameterType="java.lang.Long" resultMap="BaseResultMapWithDetailCount">
        SELECT
        <include refid="tableProperty"/>,
        <include refid="com.geetion.generic.userbase.dao.UserBaseDAO.tableProperty"/>,
        <!--include refid="com.geetion.generic.districtmodule.dao.ProvinceDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.CityDAO.tableProperty"/>,
        <include refid="com.geetion.generic.districtmodule.dao.AreaDAO.tableProperty"/,-->
        <include refid="com.geetion.puputuan.dao.JobDAO.tableProperty"/>,
        <include refid="com.geetion.puputuan.dao.InterestDAO.tableProperty"/>,
        <!-- 邀请次数 -->
        ifnull(invited_times.times, 0) AS pu_user_invited_times,
        <!-- 被邀请次数 -->
        ifnull(be_invited_times.times, 0) AS pu_user_be_invited_times,
        <!-- 好友数 -->
        ifnull(friends_number.times, 0) AS pu_user_friends_number,
        <!-- 被别人点赞相册次数 -->
        ifnull(photo_be_liked.times, 0) AS pu_user_photo_be_liked,
        <!-- 点赞别人相册次数 -->
        ifnull(photo_liked.times, 0) AS pu_user_photo_liked,
        <!-- 匹配总数 -->
        ifnull(match_times.times, 0) AS pu_user_match_times,
        <!-- 匹配成功数 -->
        ifnull(match_success_times.times, 0) AS pu_user_match_success_times,
        <!-- 匹配成功率 -->
        concat(ifnull(ROUND((match_success_times.times / match_times.times) * 100, 2), 0), '%') AS
        pu_user_match_success_ratio,
        <!-- 参与组队数 -->
        ifnull(join_group.times, 0) AS pu_user_join_group,
        <!-- 当天参与组队数 -->
        ifnull(join_group_current.times, 0) AS pu_user_join_group_current,
        <!-- 好友来源为搜索的数 -->
        ifnull(friend_from_search.times, 0) AS pu_user_friend_from_search,
        <!-- 好友来源为约会成功互评成功的数 -->
        ifnull(friend_from_activity.times, 0) AS pu_user_friend_from_activity,
        <!-- 相册来源为存储选取的数 -->
        ifnull(photo_in_ablum.times, 0) AS pu_user_photo_in_album,
        <!-- 相册来源为即时拍照的数 -->
        ifnull(photo_by_take.times, 0) AS pu_user_photo_by_take,
        <!-- 约会数 -->
        ifnull(activity_times.times, 0) AS pu_user_activity_times,
        <!-- 当天约会数 -->
        ifnull(activity_times_current.times, 0) AS pu_user_activity_current_times,
        <!-- 约会成功数 -->
        ifnull(activity_success_times.times, 0) AS pu_user_activity_success_times,
        <!-- 约会成功率 -->
        concat(ifnull(ROUND((activity_success_times.times / activity_times.times) * 100, 2), 0), '%') AS
        pu_user_activity_success_ratio,
        <!-- 被浏览数 -->
        ifnull(be_viewed_number.times, 0) AS pu_user_be_viewed_number,
        ifnull(super_like_times.times, 0) AS pu_user_super_like_times
        FROM pu_user
        LEFT JOIN geetion_user_base ON geetion_user_base.id = pu_user.user_id
        <!--LEFT JOIN geetion_province ON geetion_province.code = pu_user.province_id
        LEFT JOIN geetion_city ON geetion_city.code = pu_user.city_id
        LEFT JOIN geetion_area ON geetion_area.code = pu_user.area_id-->
        <!-- 查询没有被屏蔽的兴趣 -->
        LEFT JOIN pu_job_user ON pu_job_user.user_id = pu_user.user_id
        LEFT JOIN pu_job ON pu_job.id = pu_job_user.job_id AND pu_job.status = 1
        <!-- 查询没有被屏蔽的职业 -->
        LEFT JOIN pu_interest_user ON pu_interest_user.user_id = pu_user.user_id
        LEFT JOIN pu_interest ON pu_interest.id = pu_interest_user.interest_id AND pu_interest.status = 1

        <!-- 邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member.user_id
        FROM pu_group_member WHERE pu_group_member.type = 0 GROUP BY pu_group_member.user_id
        ) AS invited_times ON invited_times.user_id = pu_user.user_id
        <!-- 被邀请次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member.user_id FROM pu_group_member
        WHERE pu_group_member.type = 1 GROUP BY pu_group_member.user_id
        ) AS be_invited_times ON be_invited_times.user_id = pu_user.user_id
        <!-- 好友数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_friend_relationship.user_id
        FROM pu_friend_relationship GROUP BY pu_friend_relationship.user_id
        ) AS friends_number ON friends_number.user_id = pu_user.user_id
        <!-- 被别人点赞相册次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_photo.user_id FROM pu_photo_like ,pu_photo
        WHERE pu_photo.id = pu_photo_like.photo_id GROUP BY pu_photo.user_id
        ) AS photo_be_liked ON photo_be_liked.user_id = pu_user.user_id
        <!-- 点赞别人相册次数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_photo_like.user_id FROM pu_photo_like,pu_photo
        WHERE pu_photo.id = pu_photo_like.photo_id GROUP BY pu_photo_like.user_id
        ) AS photo_liked ON photo_liked.user_id = pu_user.user_id
        <!-- 匹配总数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member.user_id FROM pu_recommend,
        pu_group, pu_group_member WHERE pu_recommend.main_group_id = pu_group.id
        AND pu_group_member.group_id = pu_group.id GROUP BY pu_group_member.user_id
        ) AS match_times ON match_times.user_id = pu_user.user_id
        <!-- 匹配成功数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member.user_id FROM pu_group_member, pu_group,
        pu_recommend_success WHERE pu_group_member.group_id = pu_group.id
        AND pu_recommend_success.main_group_id = pu_group.id GROUP BY pu_group_member.user_id
        ) AS match_success_times ON match_success_times.user_id = pu_user.user_id
        <!-- 参与组队数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member.user_id FROM pu_group_member
        WHERE pu_group_member.status != 0 GROUP BY pu_group_member.user_id
        ) AS join_group ON join_group.user_id = pu_user.user_id
        <!-- 当天参与组队数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_group_member.user_id FROM pu_group_member
        WHERE pu_group_member.status != 0 and to_days(pu_group_member.create_time) = to_days(NOW()) GROUP BY pu_group_member.user_id
        ) AS join_group_current ON join_group_current.user_id = pu_user.user_id
        <!-- 好友来源为搜索的数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_friend_relationship.user_id FROM pu_friend_relationship
        WHERE pu_friend_relationship.type = 0 GROUP BY pu_friend_relationship.user_id
        ) AS friend_from_search ON friend_from_search.user_id = pu_user.user_id
        <!-- 好友来源为约会成功互评成功的数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_friend_relationship.user_id FROM pu_friend_relationship
        WHERE pu_friend_relationship.type = 1 GROUP BY pu_friend_relationship.user_id
        ) AS friend_from_activity ON friend_from_activity.user_id = pu_user.user_id
        <!-- 相册来源为存储选取的数 -->
        LEFT JOIN (SELECT count(*) AS times,pu_photo.user_id FROM pu_photo
        WHERE pu_photo.type = 0 GROUP BY pu_photo.user_id
        ) AS photo_in_ablum ON photo_in_ablum.user_id = pu_user.user_id
        <!-- 相册来源为即时拍照的数 -->
        LEFT JOIN (SELECT count(*) AS times, pu_photo.user_id FROM pu_photo
        WHERE pu_photo.type = 1 GROUP BY pu_photo.user_id
        ) AS photo_by_take ON photo_by_take.user_id = pu_user.user_id
        <!-- 约会数 -->
        LEFT JOIN (SELECT count(pu_activity.id) AS times, pu_group_member.user_id FROM pu_group_member
        LEFT JOIN pu_group ON pu_group_member.group_id = pu_group.id
        LEFT JOIN pu_activity ON (pu_activity.group_a_id = pu_group.id OR pu_activity.group_b_id = pu_group.id)
        WHERE pu_group.status IN (1, 2, 3, 4)  GROUP BY pu_group_member.user_id
        ) AS activity_times ON activity_times.user_id = pu_user.user_id
        <!-- 当天约会数 -->
        LEFT JOIN (SELECT count(pu_activity.id) AS times, pu_group_member.user_id FROM pu_group_member
        LEFT JOIN pu_group ON pu_group_member.group_id = pu_group.id
        LEFT JOIN pu_activity ON (pu_activity.group_a_id = pu_group.id OR pu_activity.group_b_id = pu_group.id)
        WHERE pu_group.status IN (1, 2, 3, 4)  and to_days(pu_activity.create_time) = to_days(NOW()) GROUP BY pu_group_member.user_id
        ) AS activity_times_current ON activity_times_current.user_id = pu_user.user_id
        <!-- 约会成功数 -->
        LEFT JOIN (SELECT count(pu_activity.id) AS times, pu_group_member.user_id FROM pu_group_member
        LEFT JOIN pu_group ON pu_group_member.group_id = pu_group.id
        LEFT JOIN pu_activity ON (pu_activity.group_a_id = pu_group.id OR pu_activity.group_b_id = pu_group.id)
        LEFT JOIN pu_sign ON pu_activity.id = pu_sign.activity_id
        WHERE pu_activity.type = 1 AND (pu_group.status IN (1, 2) OR pu_sign.user_id = pu_group_member.user_id)
        GROUP BY pu_group_member.user_id
        ) AS activity_success_times ON activity_success_times.user_id = pu_user.user_id
        <!-- 被浏览数 -->
        LEFT JOIN (SELECT count(*) AS times,pu_be_viewed.be_view_user_id as user_id
        FROM pu_be_viewed GROUP BY pu_be_viewed.be_view_user_id
        ) AS be_viewed_number ON be_viewed_number.user_id = pu_user.user_id
        <!-- 用户SuperLike次数-->
        LEFT JOIN (SELECT count(*) AS times, pu_user_super_like.user_id FROM pu_user_super_like
        LEFT JOIN pu_user ON pu_user_super_like.user_id = pu_user.user_id
        GROUP BY pu_user_super_like.user_id
        ) AS super_like_times ON super_like_times.user_id = pu_user.user_id
        <trim prefix="where" prefixOverrides="and|or">
            <if test="userId != null">
                and pu_user.user_id = #{userId,jdbcType=BIGINT}
            </if>
        </trim>
    </select>


    <select id="selectCountUserRelated" resultMap="BaseResultMapCountUserRelated">
        SELECT
        <!-- 用户总数 -->
        ifnull(user_total.total, 0) AS userTotal,
        <!-- 日新增用户数 -->
        ifnull(user_day_total.total, 0) AS user_day_total,
        <!-- 总相片数 -->
        ifnull(photo_total.total, 0) AS photo_total,
        <!-- 总点赞数 -->
        ifnull(photo_like_total.total, 0) AS photo_like_total,
        <!-- 日新增点赞数 -->
        ifnull(photo_like_day_total.total, 0) AS photo_like_day_total,
        <!-- 邀请总数 -->
        ifnull(invited_total.total, 0) AS invited_total,
        <!-- 人均好友数 -->
        ifnull(round(sum(friend_number.number) / user_total.total), 0) AS friend_person_number,
        <!-- 人均标签数 -->
        ifnull(round((interest_total.total + job_total.total) / user_total.total), 0) AS lab_person,
        <!-- 人均相片数 -->
        ifnull(round((photo_person_total.total) / user_total.total), 0) AS photo_person_total,
        <!-- 人均被浏览数 -->
        ifnull(round((be_viewed_total.total) / user_total.total), 0) AS be_viewed_total,
        <!-- 人均被赞数 -->
        ifnull(round((photo_like_person_total.total) / user_total.total), 0) AS photo_like_person_total,
        <!-- 人均邀请数 -->
        ifnull(round((be_invited_total.total) / user_total.total), 0) AS be_invited_total
        FROM
        <!-- 用户总数 -->
        (SELECT count(*) AS total
        FROM pu_user) AS user_total,
        <!-- 日新增用户数 -->
        (SELECT count(*) AS total
        FROM pu_user
        WHERE date(pu_user.create_time) = date_sub(curdate(), INTERVAL 1 DAY)) AS user_day_total,
        <!-- 总相片数 -->
        (SELECT count(*) AS total
        FROM pu_photo) AS photo_total,
        <!-- 总点赞数 -->
        (SELECT count(*) AS total
        FROM pu_photo_like,pu_photo) AS photo_like_total,
        <!-- 日新增点赞数 -->
        (SELECT count(*) AS total
        FROM pu_photo_like,pu_photo
        WHERE DATE(pu_photo_like.create_time) =
        date_sub(curdate(), INTERVAL 1 DAY)) AS photo_like_day_total,
        <!-- 邀请总数 -->
        (SELECT count(*) AS total
        FROM pu_group_member
        WHERE type = 1) AS invited_total,
        <!-- 人均好友数 -->
        (SELECT COUNT(*) AS number
        FROM pu_friend_relationship
        GROUP BY pu_friend_relationship.user_id) AS friend_number,
        <!-- 人均标签数 -->
        (SELECT sum(interest_number.number) AS total
        FROM (SELECT COUNT(id) AS number
        FROM pu_interest_user
        GROUP BY pu_interest_user.user_id) AS interest_number) AS interest_total,
        (SELECT sum(job_number.number) AS total
        FROM (SELECT COUNT(id) AS number
        FROM pu_job_user
        GROUP BY pu_job_user.user_id) AS job_number) AS job_total,
        <!-- 人均相片数 -->
        (SELECT COUNT(*) AS total
        FROM pu_photo) AS photo_person_total,
        <!-- 人均被浏览数 -->
        (SELECT COUNT(*) AS total
        FROM pu_be_viewed) AS be_viewed_total,
        <!-- 人均被赞数 -->
        (SELECT COUNT(*) AS total
        FROM pu_photo_like) AS photo_like_person_total,
        <!-- 人均邀请数 -->
        (SELECT COUNT(*) AS total
        FROM pu_group_member
        WHERE type = 1) AS be_invited_total
    </select>

    <select id="selectUserStaticData" parameterType="java.util.Map" resultMap="BaseResultMapUserStatisData">
        SELECT
        pu_user_date.date AS pu_user_date,
          count(id) AS pu_user_total,
          sum(if(pu_user_date.wechat_id is null, 0,1)) AS pu_user_wechat_total,
          sum(if(pu_user_date.sex = 'M', 1, 0)) AS pu_user_male_total,
          concat(sum(if(pu_user_date.sex = 'M', 1, 0)) * 0.1 / count(*) * 1000,'%') AS pu_user_male_ratio,
          sum(if(pu_user_date.sex = 'F', 1, 0)) AS pu_user_female_total ,
          concat(sum(if(pu_user_date.sex = 'F', 1, 0)) * 0.1 / count(*) * 1000,'%') AS pu_user_female_ratio,
          SUM(CASE WHEN pu_user_date.age &lt; 18  THEN 1 ELSE 0 END) AS pu_user_age_one,
          SUM(CASE WHEN pu_user_date.age &gt;=18 AND pu_user_date.age &lt;=29 THEN 1 ELSE 0 END) AS pu_user_age_two,
          SUM(CASE WHEN pu_user_date.age &gt;=30 AND pu_user_date.age &lt;=45 THEN 1 ELSE 0 END) AS pu_user_age_three,
          SUM(CASE WHEN pu_user_date.age &gt;=30 THEN 1 ELSE 0 END) AS pu_user_age_four
        from (
            SELECT
              <if test="type == 1">
                  DATE_FORMAT(create_time,'%Y%m') date,
              </if>
              <if test="type == 2 or type == 3 or type == 4">
                  DATE_FORMAT(create_time,'%Y%m%d') date,
              </if>
                  YEAR(CURRENT_DATE) - YEAR(pu_user.birthday) as age,
                  pu_user.*
            from pu_user
          <trim prefix="where" prefixOverrides="and|or">
              <if test="type == 3">
                and pu_user.create_time &gt;= date_sub(curdate(),INTERVAL WEEKDAY(curdate()) DAY)
                and pu_user.create_time &lt;= date_sub(curdate(),INTERVAL WEEKDAY(curdate()) - 6 DAY)
              </if>
              <if test="type == 4">
                  and pu_user.create_time &gt;= date_sub(curdate(),INTERVAL WEEKDAY(curdate()) + 7 DAY)
                  and pu_user.create_time &lt;= date_sub(curdate(),INTERVAL WEEKDAY(curdate()) + 1 DAY)
              </if>
          </trim>
        ) pu_user_date
        GROUP BY pu_user_date.date
    </select>


    <select id="selectUserJobStaticData" parameterType="java.util.Map" resultMap="BaseResultMapJobStatisData">

        SELECT
          pu_job.name as pu_job_total_name
          ,count(*) as pu_job_total_total
          ,concat(count(*) / (select count(*) from pu_user) * 100, '%') as pu_job_total_ratio
          ,SUM(if(pu_user.sex = 'M',1, 0)) as pu_job_total_male
          ,SUM(if(pu_user.sex = 'F',1, 0)) as pu_job_total_female
        from
          pu_job_user
          LEFT JOIN pu_job ON pu_job_user.job_id = pu_job.id
          LEFT JOIN pu_user ON pu_job_user.user_id = pu_user.user_id
        GROUP BY pu_job.id

    </select>

    <select id="selectUserInterestStaticData" parameterType="java.util.Map" resultMap="BaseResultMapInterestStatisData">
        SELECT
          pu_interest.name as pu_interest_total_name
          ,count(*) as pu_interest_total_total
          ,concat(count(*) / (select count(*) from pu_user) * 100, '%') as pu_interest_total_ratio
          ,SUM(if(pu_user.sex = 'M',1, 0)) as pu_interest_total_male
          ,SUM(if(pu_user.sex = 'F',1, 0)) as pu_interest_total_female
        from
          pu_interest_user
          LEFT JOIN pu_interest ON pu_interest_user.interest_id = pu_interest.id
          LEFT JOIN pu_user ON pu_interest_user.user_id = pu_user.user_id
        GROUP BY pu_interest.id
    </select>

    <select id="selectUserSumStatisData" parameterType="java.util.Map" resultMap="BaseResultMapUserStatisData">
        SELECT
          count(*) pu_user_total,
          sum(if(pu_user.sex = 'M' ,1,0)) pu_user_male_total,
          sum(if(pu_user.sex = 'F' ,1,0)) pu_user_female_total,
          sum(if(pu_user.wechat_id is null , 0, 1)) pu_user_wechat_total,
          sum(if(to_days(pu_user.create_time) = to_days(now()), 1, 0)) pu_user_today_total,
          sum(if(to_days(pu_user.create_time) = to_days(now()) AND pu_user.sex = 'M', 1, 0)) pu_user_today_male_total,
          sum(if(to_days(pu_user.create_time) = to_days(now()) AND pu_user.sex = 'F', 1, 0)) pu_user_today_female_total,
          sum(if(b.num is NUll, 1, 0)) pu_user_friend_one_total,
          sum(if(b.num BETWEEN 1 and 3, 1, 0)) pu_user_friend_two_total,
          sum(if(b.num &gt;= 4, 1, 0)) pu_user_friend_three_total
        from pu_user
        LEFT JOIN geetion_user_base ON pu_user.user_id = geetion_user_base.id
        LEFT JOIN (SELECT user_id , count(*) AS num FROM pu_friend_relationship
        GROUP BY user_id) b ON pu_user.user_id = b.user_id
        WHERE geetion_user_base.freeze = 0
    </select>

    <select id="selectUserSumForCharts" parameterType="java.util.Map" resultMap="BaseResultMapUserStatisData">
        SELECT
        count(*) pu_user_total,
        sum(if(pu_user.sex = 'M' ,1,0)) pu_user_male_total,
        sum(if(pu_user.sex = 'F' ,1,0)) pu_user_female_total
        from pu_user
        <trim prefix="where" prefixOverrides="and|or">
          <if test="type == 0">
              YEARWEEK(date_format(create_time,'%Y-%m-%d')) = YEARWEEK(now())
          </if>
          <if test="type == 1">
              to_days(pu_user.create_time) = to_days(now())
          </if>
          <if test="type == 2">
              YEARWEEK(date_format(create_time,'%Y-%m-%d')) = YEARWEEK(now())-1
          </if>
          <if test="type == 3">
              date_format(create_time,'%Y-%m')=date_format(now(),'%Y-%m')
          </if>
          <if test="type == 4">
              date_format(create_time,'%Y-%m')=date_format(DATE_SUB(curdate(), INTERVAL 1 MONTH),'%Y-%m')
          </if>
        </trim>

    </select>

    <select id="selectUserSumForBar" parameterType="java.util.Map" resultMap="BaseResultMapUserStatisData">
        SELECT
        <if test="type == 0">
            date_format(create_time,'%Y-%m-%d') pu_user_date,
        </if>
        <if test="type == 1">
            date_format(create_time,'%Y-%m') pu_user_date,
        </if>
        count(*) pu_user_total
        from pu_user
        <trim prefix="where" prefixOverrides="and|or">
            <if test="type == 0">
                date_format(create_time,'%Y-%m-%d') BETWEEN date_format(#{beginTime,jdbcType=TIMESTAMP},'%Y-%m-%d') AND date_format(#{endTime,jdbcType=TIMESTAMP},'%Y-%m-%d')
            </if>
            <if test="type == 1">
                date_format(create_time,'%Y-%m') BETWEEN date_format(#{beginTime,jdbcType=TIMESTAMP},'%Y-%m') AND date_format(#{endTime,jdbcType=TIMESTAMP},'%Y-%m')
            </if>
        </trim>
        GROUP BY
        <if test="type == 0">
            date_format(create_time,'%Y-%m-%d')
        </if>
        <if test="type == 1">
            date_format(create_time,'%Y-%m')
        </if>

    </select>


    <select id="callUserDailyLiving" parameterType="java.util.Map" statementType="CALLABLE" >
    {call
    pr_insert_update_user_dl(
    #{userId,mode=IN,jdbcType=BIGINT}
    )}
    </select>


</mapper>